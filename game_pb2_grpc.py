# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import game_pb2 as game__pb2


class GameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartGame = channel.unary_unary(
                '/Game/StartGame',
                request_serializer=game__pb2.StartGameRequest.SerializeToString,
                response_deserializer=game__pb2.StartGameResponse.FromString,
                )
        self.ListBoard = channel.unary_unary(
                '/Game/ListBoard',
                request_serializer=game__pb2.ListBoardRequest.SerializeToString,
                response_deserializer=game__pb2.ListBoardResponse.FromString,
                )
        self.UpdateBoard = channel.unary_unary(
                '/Game/UpdateBoard',
                request_serializer=game__pb2.UpdateBoardRequest.SerializeToString,
                response_deserializer=game__pb2.UpdateBoardResponse.FromString,
                )
        self.ResetGame = channel.unary_unary(
                '/Game/ResetGame',
                request_serializer=game__pb2.ResetGameRequest.SerializeToString,
                response_deserializer=game__pb2.ResetGameResponse.FromString,
                )
        self.SetSymbol = channel.unary_unary(
                '/Game/SetSymbol',
                request_serializer=game__pb2.SetSymbolRequest.SerializeToString,
                response_deserializer=game__pb2.SetSymbolResponse.FromString,
                )
        self.GetTime = channel.unary_unary(
                '/Game/GetTime',
                request_serializer=game__pb2.TimeRequest.SerializeToString,
                response_deserializer=game__pb2.TimeResponse.FromString,
                )
        self.Synchronize = channel.unary_unary(
                '/Game/Synchronize',
                request_serializer=game__pb2.SyncRequest.SerializeToString,
                response_deserializer=game__pb2.SyncResponse.FromString,
                )
        self.SetTime = channel.unary_unary(
                '/Game/SetTime',
                request_serializer=game__pb2.SetTimeRequest.SerializeToString,
                response_deserializer=game__pb2.SetTimeResponse.FromString,
                )
        self.Election = channel.unary_unary(
                '/Game/Election',
                request_serializer=game__pb2.ElectionRequest.SerializeToString,
                response_deserializer=game__pb2.ElectionResponse.FromString,
                )
        self.ElectionResult = channel.unary_unary(
                '/Game/ElectionResult',
                request_serializer=game__pb2.ElectionResultRequest.SerializeToString,
                response_deserializer=game__pb2.ElectionResultResponse.FromString,
                )


class GameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBoard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBoard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSymbol(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Synchronize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Election(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ElectionResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=game__pb2.StartGameRequest.FromString,
                    response_serializer=game__pb2.StartGameResponse.SerializeToString,
            ),
            'ListBoard': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBoard,
                    request_deserializer=game__pb2.ListBoardRequest.FromString,
                    response_serializer=game__pb2.ListBoardResponse.SerializeToString,
            ),
            'UpdateBoard': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBoard,
                    request_deserializer=game__pb2.UpdateBoardRequest.FromString,
                    response_serializer=game__pb2.UpdateBoardResponse.SerializeToString,
            ),
            'ResetGame': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetGame,
                    request_deserializer=game__pb2.ResetGameRequest.FromString,
                    response_serializer=game__pb2.ResetGameResponse.SerializeToString,
            ),
            'SetSymbol': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSymbol,
                    request_deserializer=game__pb2.SetSymbolRequest.FromString,
                    response_serializer=game__pb2.SetSymbolResponse.SerializeToString,
            ),
            'GetTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTime,
                    request_deserializer=game__pb2.TimeRequest.FromString,
                    response_serializer=game__pb2.TimeResponse.SerializeToString,
            ),
            'Synchronize': grpc.unary_unary_rpc_method_handler(
                    servicer.Synchronize,
                    request_deserializer=game__pb2.SyncRequest.FromString,
                    response_serializer=game__pb2.SyncResponse.SerializeToString,
            ),
            'SetTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTime,
                    request_deserializer=game__pb2.SetTimeRequest.FromString,
                    response_serializer=game__pb2.SetTimeResponse.SerializeToString,
            ),
            'Election': grpc.unary_unary_rpc_method_handler(
                    servicer.Election,
                    request_deserializer=game__pb2.ElectionRequest.FromString,
                    response_serializer=game__pb2.ElectionResponse.SerializeToString,
            ),
            'ElectionResult': grpc.unary_unary_rpc_method_handler(
                    servicer.ElectionResult,
                    request_deserializer=game__pb2.ElectionResultRequest.FromString,
                    response_serializer=game__pb2.ElectionResultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Game', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Game(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/StartGame',
            game__pb2.StartGameRequest.SerializeToString,
            game__pb2.StartGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBoard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/ListBoard',
            game__pb2.ListBoardRequest.SerializeToString,
            game__pb2.ListBoardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBoard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/UpdateBoard',
            game__pb2.UpdateBoardRequest.SerializeToString,
            game__pb2.UpdateBoardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/ResetGame',
            game__pb2.ResetGameRequest.SerializeToString,
            game__pb2.ResetGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSymbol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/SetSymbol',
            game__pb2.SetSymbolRequest.SerializeToString,
            game__pb2.SetSymbolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/GetTime',
            game__pb2.TimeRequest.SerializeToString,
            game__pb2.TimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Synchronize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/Synchronize',
            game__pb2.SyncRequest.SerializeToString,
            game__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/SetTime',
            game__pb2.SetTimeRequest.SerializeToString,
            game__pb2.SetTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Election(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/Election',
            game__pb2.ElectionRequest.SerializeToString,
            game__pb2.ElectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ElectionResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Game/ElectionResult',
            game__pb2.ElectionResultRequest.SerializeToString,
            game__pb2.ElectionResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
